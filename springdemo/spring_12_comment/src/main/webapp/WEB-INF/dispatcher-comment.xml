<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-4.3.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.1.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.2.xsd">

	<mvc:annotation-driven/> <!-- 리턴타입을 json으로 바꿔주는 annotaion 사용 할 때 추가 필요 -->
	<!-- [1] DataSource빈 선언 -->
	<bean id="dataSource" class="org.springframework.jdbc.datasource.DriverManagerDataSource">
		<property name="driverClassName" value="oracle.jdbc.OracleDriver"/>
		<property name="url" value="jdbc:oracle:thin://@127.0.0.1:1521:xe"/>
		<property name="username" value="hr"/>
		<property name="password" value="a1234"/>
	</bean>

	<!-- [2] SqlSessionFactoryBean 빈 선언 -->
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dataSource"/>
		<property name="mapperLocations">
			<list>
				<value>classpath:config/boardMapper.xml</value>
				<value>classpath:config/replyMapper.xml</value>
			</list>
		</property>
	</bean>

	<!-- [3] SqlSessionTemplate 빈 선언 -->
	<bean id="sqlSession" class="org.mybatis.spring.SqlSessionTemplate">
		<constructor-arg ref="sqlSessionFactory"/>
	</bean>

	<!-- [4] TransactionManager 빈 선언 -->
	<bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource" />
	</bean>

	<!-- [5] 선언적 트랜잭션(<tx:advice> 태그 이용) 선언 -->
	<tx:advice id="txAdvice" transaction-manager="transactionManager">
		<tx:attributes>
			<tx:method name="*Process" rollback-for="java.lang.Exception" />
		</tx:attributes>
	</tx:advice>

	<!-- [6] 트랜잭션으로 처리할 메소드에 transactionManger 설정-->
	<aop:config>
		<!-- <aop:advisor advice-ref="txAdvice" pointcut-ref="execution(* service.BoardServiceImp.*Process(..))" /> -->
		<aop:pointcut expression="execution(* service.BoardServiceImp.*Process(..))" id="aa"/>
		<aop:advisor advice-ref="txAdvice" pointcut-ref="aa" />
	</aop:config>

	<!-- [7] DAO 빈 선언 -->
	<bean id="dao" class="dao.BoardDaoImp">
		<property name="sqlSession" ref="sqlSession"/>
	</bean>

	<!-- [8] Service 빈 선언 -->
	<bean id="service" class="service.BoardServiceImp">
		<property name="dao" ref="dao"/>
	</bean>
	
	<!-- 파일 업로드 시작 -->
	<bean id="path" class="java.lang.String">
		<constructor-arg value="c:/temp"/>
	</bean>
	<!-- 첨부파일의 임시기억장치 경로 설정(현재 버전에서는 생략 가능) -->
	<!-- <bean id="uploadDirResource" class="org.springframework.core.io.FileSystemResource">
		<constructor-arg value="./src/main/webapp/files/"/>
	</bean> -->
	<!-- 첨부파일을 임시기억저장소에 저장(id는 꼭 "multipartResolver"로) -->
	<bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
		<!-- <property name="uploadTempDir" ref="uploadDirResource"/> --> <!-- 임시기억장치 경로 설정을 생략한경우 같이 생략해야함 -->
		<property name="maxUploadSize" value="1000000000"/>
	</bean>
	<!-- 파일 업로드 끝 -->
	
	<!-- [9] Controller 빈 선언 -->
	<bean class="controller.BoardController">
		<property name="service" ref="service"/>
		<property name="path" ref="path"/>
	</bean>
	
	<!-- 다운로드 뷰 빈 선언 -->
	<!-- <bean id="download" class="view.BoardDownLoadView">
		<property name="dao" ref="dao"/>
	</bean> -->

	<!-- [10] View 빈 선언 -->
	<!-- 여러개의 뷰에 대한 빈이 선언되어 있는 경우 우선순위를 설정해야함 -->
	
	<!-- BeanNameViewResolver: 특별한 맵핑정보 없이 view이름을 URL로 사용(view이름과 실제 view자원과의 이름이 같을 때) -->
	<!-- setViewName에 설정해둔 이름과 환경설정에 선언해둔 bean객체의 이름이 같을 경우 실행-->
	<!-- 뷰네임에 설정되어있는 값과 일치하는 bean(id값)을 찾아서 실행  -->
	<!-- 여기에서는 다운로드 창을 띄워주기 위해서 해주어야 하는 과정(이거 빠지면 404오류 뜸) -->
	<bean class="org.springframework.web.servlet.view.BeanNameViewResolver">
		<property name="order" value="1"/> <!-- 우선순위 1 -->
	</bean>
	
	<!-- InternalResourceViewResolver: WAR파일 내에 포함된 뷰 템플릿을 찾음(뷰 템플릿의 경로는 논리적 뷰 이름에 접두어와 접미어를 붙여 구성) -->
	<!-- 항상 우선순위를 마지막에 둬야함 -->
	<bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<property name="prefix" value="/WEB-INF/view/" />
		<property name="suffix" value=".jsp" />
		<property name="order" value="1"/> <!-- 우선순위 2 -->
	</bean>
</beans>