<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
    PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="board">
	<select id="count" resultType="int">
		select count(*) from board
	</select>
	
	<select id="list" parameterType="dto.PageDTO" resultType="dto.BoardDTO">
   <![CDATA[
      select b.* from
      (select rownum as rm, a.* from(
      select * from board order by ref desc, re_step asc)a)b
      where b.rm>=#{startRow} and b.rm<=#{endRow}
   ]]>
	</select>
	
	<!-- 답변에 최신을 하단으로 내릴 계층적 쿼리 방법을 모르겠음. 정렬 방법? 새로운 컬럼?? -->
	 
	<update id="readCount" parameterType="int">
		update board
		set readcount = readcount + 1
		where num = #{num}
	</update>	 
	
	<select id="content" parameterType="int" resultType="dto.BoardDTO">
		select *
		from board
		where num = #{num}
	</select>
	
	<!-- 출력순서 (가장 최근 입력한 자료가 맨 위로) -->
	<update id="reStepCount" parameterType="dto.BoardDTO">
	<![CDATA[
		update board set re_step=re_step+1
		where ref=#{ref} and re_step>#{re_step}
	]]>
	</update>

	<insert id="save" parameterType="dto.BoardDTO">
		insert into
		board(num,writer,email,subject,reg_date,readcount,ref,re_step,re_level,content,ip,upload)
		values(board_num_seq.nextval,#{writer},#{email},#{subject},sysdate,0, 
		<choose>
			<when test="ref==0"> <!-- 제목글 일 때 -->
				board_num_seq.nextval
			</when>
			<otherwise> <!-- 답변글 일때 -->
				#{ref}
			</otherwise>
		</choose>
		,#{re_step},#{re_level},#{content},#{ip},#{upload, jdbcType=VARCHAR})
	</insert>
	
	<update id="update" parameterType="dto.BoardDTO">
		update board set subject = #{subject}, email = #{email}, content = #{content}
		<if test="upload!=null"> <!-- 새로 들어오는 upload 값으로 판별 -->
		, upload = #{upload}
		</if>
		, ip = #{ip}, reg_date = sysdate where num = #{num}
	</update>
	
	<select id="upload" parameterType="int" resultType="java.lang.String">
		select upload
		from board
		where num = #{num}
	</select>
	
	<delete id="delete" parameterType="int">
		delete from board where num = #{num}
	</delete>
</mapper>











 
 
 
 
 
 
