<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.1.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.2.xsd">

	<!-- [1] DataSource빈 선언 -->
	<bean id="dataSource" class="org.springframework.jdbc.datasource.DriverManagerDataSource">
	<property name="driverClassName" value="oracle.jdbc.OracleDriver" />
    <property name="url" value="jdbc:oracle:thin://@127.0.0.1:1521:xe" />	
	<property name="username" value="hr" />
	<property name="password" value="a1234" />
	</bean>

	<!-- [2] SqlSessionFactoryBean 빈 선언 -->
	<bean id="sqlSessionFactory"
		class="org.mybatis.spring.SqlSessionFactoryBean">
	<property name="dataSource" ref="dataSource"/>
	<property name="mapperLocations">
		<list>
			<value>classpath:config/boardMapper.xml</value>
		</list>
	</property>
	</bean>

	<!-- [3] SqlSessionTemplate 빈 선언 -->
	<bean id="sqlSession"
		class="org.mybatis.spring.SqlSessionTemplate">
	<constructor-arg ref="sqlSessionFactory"></constructor-arg>
	</bean>

	<!-- [4] TransactionManager 빈 선언 -->
	<bean id="transactionManager"
		class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource" />
	</bean>

	<!-- [5] 선언적 트랜잭션(tx:advice) 선언 -->
	<tx:advice id="txAdvice"
		transaction-manager="transactionManager">
		<tx:attributes>
			<tx:method name="*Process"
				rollback-for="java.lang.Exception" />
		</tx:attributes>
	</tx:advice>

	<!-- [6] 트랜잭션 설정 -->
	<aop:config>
		<aop:advisor advice-ref="txAdvice"
			pointcut="execution(* service.Board*.*(..))" />
	</aop:config>

	<!-- [7] DAO 빈 선언 -->
	<bean id="dao" class="dao.BoardDaoImp">
		<property name="sqlSession" ref="sqlSession"></property>
	</bean>

	<!-- [8] Service 빈 선언 -->
	<bean id="service" class="service.BoardServiceImp">
		<property name="dao" ref="dao"></property>
	</bean>
	
	<!-- 파일 업로드 시작 -->
	<!-- 첨부 파일의 임시기억 장치 경로 설정 , 현 버전에선 이 작업을 안해주어도 됨-->
	<bean id="uploadDirResource"
	class="org.springframework.core.io.FileSystemResource">
	<!-- <constructor-arg value="c:/temp/"> -->
	<constructor-arg value="./src/main/webapp/files/" />
	</bean>
	
	<!-- 첨부파일을 임시기억장소에 저장한다. -->
	<bean id="multipartResolver"
	class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
	<property name="uploadTempDir" ref="uploadDirResource"/> <!-- 임시기억장치경로 설정 안할 시 이 문장 삭제해야함 -->
	<property name="maxUploadSize" value="1000000000" />
	</bean>
	<!-- 파일 업로드 끝 -->
		
	<!-- [9] Controller 빈 선언 -->
	<bean class="controller.BoardController">
		<property name="service" ref="service"></property>
	</bean>
	
	<!-- 다운로드 뷰 빈 선언 -->
	<bean id="download" class="view.BoardDownLoadView">
		<property name="dao" ref="dao" />
	</bean>
	
	<!-- [10] View 빈 선언 -->
	<bean class="org.springframework.web.servlet.view.BeanNameViewResolver">
	<!-- 우선순위를 지정. bean id 값하고 setViewName에서 선언한 값이 일치하는 빈을 실행하라라는 뜻 -->
		<property name="order" value="1"></property>
	</bean>
	
	<bean
		class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<!-- InternalResourceViewResolver는 항상 마지막에 해야함, 일치하는 값을 못찾아버리면 종료해버림 -->
		<property name="prefix" value="/WEB-INF/" />
		<property name="suffix" value=".jsp" />	
		<property name="order" value="2" />	
	</bean>
</beans>







